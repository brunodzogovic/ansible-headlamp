# All tasks run exactly once, on the delegate (a control-plane node).
# We use become because /etc/kubernetes/admin.conf may be root-readable only.

- name: Gather facts on delegate (needed for package manager detection)
  become: true
  delegate_to: "{{ k8s_delegate }}"
  run_once: true
  setup:
  vars:
    ansible_python_interpreter: /usr/bin/python3

- name: Ensure python and curl present on delegate
  become: true
  delegate_to: "{{ k8s_delegate }}"
  run_once: true
  apt:
    name:
      - python3
      - python3-pip
      - curl
    state: present
  vars:
    ansible_python_interpreter: /usr/bin/python3

- name: Install Kubernetes Python client (Debian/Ubuntu)
  become: true
  apt:
    name:
      - python3-kubernetes
    state: present
    update_cache: true

- name: Install helm binary on delegate if missing
  become: true
  delegate_to: "{{ k8s_delegate }}"
  run_once: true
  shell: |
    set -e
    if ! command -v helm >/dev/null 2>&1; then
      TMP=$(mktemp -d)
      cd "$TMP"
      # pick a stable helm; adjust as you like
      HELM_VER="v3.15.4"
      curl -fsSL "https://get.helm.sh/helm-${HELM_VER}-linux-amd64.tar.gz" -o helm.tgz
      tar -xzf helm.tgz
      install linux-amd64/helm /usr/local/bin/helm
      rm -rf "$TMP"
    fi
  args:
    executable: /bin/bash

- name: Ensure namespace exists
  kubernetes.core.k8s:
    kubeconfig: "{{ k8s_kubeconfig_path }}"
    api_version: v1
    kind: Namespace
    name: "{{ headlamp_namespace }}"
    state: present

- set_fact:
    no_proxy_env:
      HTTP_PROXY: ""
      HTTPS_PROXY: ""
      http_proxy: ""
      https_proxy: ""
      NO_PROXY: "localhost,127.0.0.1,::1,kubernetes.default.svc,.svc,.cluster.local,.maas,controller-1,controller-2,controller-3"
      no_proxy:  "localhost,127.0.0.1,::1,kubernetes.default.svc,.svc,.cluster.local,.maas,controller-1,controller-2,controller-3"
  run_once: true

- name: Add Headlamp Helm repo
  become: true
  environment: "{{ no_proxy_env }}"   # <- stays here
  kubernetes.core.helm_repository:
    name: headlamp
    repo_url: "https://kubernetes-sigs.github.io/headlamp/"

- name: Copy Headlamp Helm values to controller
  become: true
  copy:
    src: "{{ playbook_dir }}/../files/values-headlamp.yaml"   # on Semaphore (control)
    dest: /tmp/values-headlamp.yaml                            # on controller-1 (remote)
    mode: '0644'

- name: Deploy / upgrade Headlamp
  become: true
  environment: "{{ no_proxy_env }}"         # keep if youâ€™re overriding proxies
  kubernetes.core.helm:
    name: "{{ headlamp_release_name }}"
    chart_ref: "headlamp/headlamp"
    release_namespace: "{{ headlamp_namespace }}"
    kubeconfig: "{{ k8s_kubeconfig_path }}"
    values_files:
      - "/tmp/values-headlamp.yaml"         # <-- remote path
    wait: true
    atomic: true
    timeout: "15m"

- name: Wait until Headlamp Service exists (created by Helm)
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Service
    name: "{{ headlamp_release_name }}"
    namespace: "{{ headlamp_namespace }}"
  register: headlamp_svc_info
  until: headlamp_svc_info.resources | length > 0
  retries: 30
  delay: 5

- name: Expose Headlamp via LoadBalancer (optional)
  when: headlamp_expose_enabled | bool
  include_tasks: expose.yml


# Helper fact for no-proxy (only used if headlamp_force_no_proxy=true)
- name: Build no-proxy env
  set_fact:
    _no_proxy_env:
      HTTP_PROXY: ""
      HTTPS_PROXY: ""
      http_proxy: ""
      https_proxy: ""
      NO_PROXY: "localhost,127.0.0.1,::1,kubernetes.default.svc,.svc,.cluster.local"
      no_proxy:  "localhost,127.0.0.1,::1,kubernetes.default.svc,.svc,.cluster.local"
  when: headlamp_force_no_proxy | bool
  run_once: true
